%{
#define ATSCODEFORMAT "txt"
#if (ATSCODEFORMAT == "txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
val _thisfilename = atext_strcst"socket.cats"
val () = theAtextMap_insert_str ("thisfilename", _thisfilename)
%}\
\
#atscode_banner_for_C()
#atscode_copyright_GPL_for_C()

#atscode_separator_for_C()

/*
** Source:
** $PATSHOME/libc/sys/CATS/CODEGEN/socket.atxt
** Time of generation: #timestamp()
*/

#atscode_separator_for_C()

/*
#atscode_author("Hongwei Xi")
#atscode_authoremail("gmhwxiATgmailDOTcom")
#atscode_start_time("November, 2014")
*/

#atscode_separator_for_C()

\#ifndef ATSLIB_LIBC_SYS_CATS_SOCKET
\#define ATSLIB_LIBC_SYS_CATS_SOCKET

#atscode_separator_for_C()
//
\#include <unistd.h>
\#include <sys/socket.h>
//
#atscode_separator_for_C()

\#include "share/H/pats_atslib.h"

#atscode_separator_for_C()

/*
typedef
unsigned short int sa_family_t; // socket address family
*/
typedef
unsigned short int sp_family_t; // socket protocol family

#atscode_separator_for_C()

\#define atslib_socket_AF_type socket_AF_type
\#define atslib_socket_PF_type socket_PF_type

#atscode_separator_for_C()
//
\#define \\
atslib_bind_err(fd, sa, len) \\
  bind(fd, (const struct sockaddr*)sa, len)
//
extern
void
atslib_bind_exn
(
  int sockfd, atstype_ptr sa, socklen_t salen
); // end of [atslib_bind_exn]
//
#atscode_separator_for_C()
//
\#define \\
atslib_listen_err(fd, qsz) listen(fd, qsz)
//
extern
void
atslib_listen_exn (int sockfd, int listenqsz);
//
#atscode_separator_for_C()
//
\#define \\
atslib_connect_err(fd, sa, len) \\
  connect(fd, (const struct sockaddr*)sa, len)
//
extern
void
atslib_connect_exn
(
  int sockfd, atstype_ptr sa, socklen_t salen
); // end of [atslib_connect_exn]
//
#atscode_separator_for_C()
//
\#define \\
atslib_accept_err(fd, sa, len) \\
  accept(fd, (struct sockaddr*)sa, (socklen_t*)len)
//
\#define \\
atslib_accept_null_err(fd) atslib_accept_err(fd, 0, 0)
//
#atscode_separator_for_C()

\#define atslib_socket_close(fd) close(fd)

#atscode_separator_for_C()

\#define atslib_shutdown(fd, how) shutdown(fd, how)

#atscode_separator_for_C()

\#define \\
atslib_socket_read(fd, bufp, bsz) read(fd, (char*)bufp, bsz)
\#define \\
atslib_socket_write(fd, bufp, bsz) write(fd, (const char*)bufp, bsz)

#atscode_separator_for_C()

\#endif // ifndef ATSLIB_LIBC_SYS_CATS_SOCKET

#atscode_separator_for_C()

#atscode_eof_strsub_for_C("\#thisfilename$")\

%{
implement main () = fprint_filsub (stdout_ref, "socket_atxt.txt")
%}\
