%{
//
staload
STDIO = "libc/SATS/stdio.sats"
staload TIME = "libc/SATS/time.sats"
//
dynload "libatsdoc/dynloadall.dats"
//
staload "libatsdoc/SATS/libatsdoc_atext.sats"
//
%}\
%{

fun comment
  (x: string): atext = atext_nil ()
// end of [comment]

fun make_entry
  (nm: string): atext = let
//
val ent = sprintf ("\
all:: %s\n\
%s: %s.exe\n\
%s.exe: %s_dats.c ; \
  $(CCOPT) -D_GNU_SOURCE -O2 -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime -o $@ $<\n\
%s_dats.c: %s.dats ; \
  $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output %s_dats.c --dynamic %s.dats\n\
clean:: ; $(RMF) %s_dats.o\n\
clean:: ; $(RMF) %s_dats.c\n\
cleanall:: ; $(RMF) %s.exe\n\
", @(nm, nm, nm, nm, nm, nm, nm, nm, nm, nm, nm, nm)
) // end of [val]
//
val ent = string_of_strptr (ent)
//
in
  atext_strcst (ent)
end // end of [make_entry]

fun make2_entry
  (nm: string, cflags: string, libs: string): atext = let
//
val ent = sprintf ("\
all:: %s\n\
%s: %s.exe\n\
%s.exe: %s_dats.c ; \
  $(CCOPT) -D_GNU_SOURCE -O2 \
    -I$(PATSHOMEQ) -I$(PATSHOMEQ)/ccomp/runtime %s -o $@ $< %s\n\
%s_dats.c: %s.dats ; \
  $(PATSOPT) -IATS$(PATSHOMEQ)/contrib --output %s_dats.c --dynamic %s.dats\n\
clean:: ; $(RMF) %s_dats.o\n\
clean:: ; $(RMF) %s_dats.c\n\
cleanall:: ; $(RMF) %s.exe\n\
", @(nm, nm, nm, nm, nm, cflags, libs, nm, nm, nm, nm, nm, nm, nm)
) // end of [val]
//
val ent = string_of_strptr (ent)
//
in
  atext_strcst (ent)
end // end of [make2_entry]

%}\
#
#
# This Makefile is automatically generated
# from executing the following command-line:
#
# make -f Makefile.gen
#
#

######

CCOPT=gcc -std=c99

######

ifeq ("$(PATSHOME)","")
  PATSHOMEQ="$(ATSHOME)"
else
  PATSHOMEQ="$(PATSHOME)"
endif

######

PATSOPT=$(PATSHOMEQ)/bin/patsopt
PATSLIB=$(PATSHOMEQ)/ccomp/atslib/lib

######

all::

######

LNS=ln -s
RMF=rm -f

######

#make_entry("prelude_basics")
#make2_entry("prelude_integer", "-DATS_MEMALLOC_LIBC", "")
#make_entry("prelude_bool")
#make_entry("prelude_char")
#make2_entry("prelude_float", "", "-lm")
#make2_entry("prelude_memory", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("prelude_pointer", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("prelude_string", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("prelude_reference", "-DATS_MEMALLOC_LIBC", "")

#make2_entry("prelude_filebas", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

#make_entry("prelude_intrange")

#make_entry("prelude_checkast")

#make2_entry("prelude_list", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("prelude_list_vt", "-DATS_MEMALLOC_LIBC", "")

#make2_entry("prelude_option", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("prelude_option_vt", "-DATS_MEMALLOC_LIBC", "")

#make2_entry("prelude_array", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("prelude_arrayptr", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("prelude_arrayref", "-DATS_MEMALLOC_LIBC", "")

#make2_entry("prelude_matrix", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("prelude_matrixptr", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("prelude_matrixref", "-DATS_MEMALLOC_LIBC", "")

#make2_entry("prelude_stream", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("prelude_stream_vt", "-DATS_MEMALLOC_LIBC", "")

#make_entry("prelude_gprint")

######

#make2_entry("libc_dirent", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libc_dlfcn", "", "-ldl")
#make_entry("libc_fcntl")
#make_entry("libc_fnmatch")
#make2_entry("libc_malloc", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libc_math", "", "-lm")
#make2_entry("libc_signal", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libc_stdio", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libc_stdlib", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libc_string", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libc_strings", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libc_time", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libc_unistd", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

######

#make2_entry("libc_sys_stat", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

######

#make2_entry("libc_gdbm_gdbm", "-DATS_MEMALLOC_LIBC", "-lgdbm")

######

#make2_entry("libats_qlist", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libats_sllist", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libats_dllist", "-DATS_MEMALLOC_LIBC", "")

######

#make2_entry("libats_stkarray", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libats_deqarray", "-DATS_MEMALLOC_LIBC", "")

######

#make2_entry("libats_dynarray", "-DATS_MEMALLOC_LIBC", "")

######

#make2_entry("libats_refcount", "-DATS_MEMALLOC_LIBC", "")

######

#make2_entry("libats_stringbuf", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
%{
(*
#make2_entry("libats_strobjref", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
*)
%}

######

%{
(*
#make2_entry("libats_gvector", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libats_gmatrix", "-DATS_MEMALLOC_LIBC", "")
*)
%}

######

#make2_entry("libats_hashtbl_chain", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libats_hashtbl_linprb", "-DATS_MEMALLOC_LIBC", "")

######

#make2_entry("libats_funmap_list", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libats_funmap_avltree", "-DATS_MEMALLOC_LIBC", "")

######

#make2_entry("libats_funset_listord", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libats_funset_avltree", "-DATS_MEMALLOC_LIBC", "")

######

#make2_entry("libats_fundeque_fngtree", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libats_funralist_nested", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

######

#make2_entry("libats_linmap_list", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libats_linmap_avltree", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libats_linmap_randbst", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libats_linmap_skiplist", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

######

#make2_entry("libats_linset_listord", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libats_linset_avltree", "-DATS_MEMALLOC_LIBC", "")

######

#make2_entry("libats_linheap_binomial", "-DATS_MEMALLOC_LIBC", "")
#make2_entry("libats_linheap_binomial2", "-DATS_MEMALLOC_LIBC", "")

######

#make2_entry("libats_lindeque_dllist", "-DATS_MEMALLOC_LIBC", "")

######

#make2_entry("libats_ML_list0", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libats_ML_array0", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libats_ML_matrix0", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libats_ML_string", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libats_ML_strarr", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

######

#make2_entry("libats_ML_filebas", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libats_ML_intrange", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

######

#make2_entry("libats_ML_funset", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libats_ML_funmap", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

######

#make2_entry("libats_ML_monad_list", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libats_ML_monad_maybe", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

######

#make2_entry("libats_ATS1_funset_listord", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

#make2_entry("libats_ATS1_funheap_braun", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")
#make2_entry("libats_ATS1_funheap_binomial", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

#make2_entry("libats_ATS1_funmset_listord", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

######

#make2_entry("libats_ATS1_linset_listord", "-DATS_MEMALLOC_LIBC", "-L$(PATSLIB) -latslib")

######

clean:: ; $(RMF) *~
clean:: ; $(RMF) *_?ats.o *_?ats.c
clean:: ; $(RMF) *_atxt.txt
clean:: ; $(RMF) *_atxt.dats
clean:: ; $(RMF) gdbmtest.gdbm
clean:: ; $(RMF) Makefile.exe

cleanall:: clean

###### end of [Makefile] ######
\
%{
implement main () = fprint_filsub (stdout_ref, "Makefile_atxt.txt")
%}\
