#! /usr/bin/env pure
//
// See the version by Barry Schwartz:
// https://bitbucket.org/chemoelectric/odds_and_ends/src/fc3d388d71de6fe7adf75203ac45e7aafc8de8b6/ats/gauss_jordan.pure?at=default
//
%< -*- ATS -*-

#include "./gauss_jordan.dats"

(*
%{
void *atsruntime_malloc_undef(size_t bsz) { return malloc(bsz); }
%}
*)

%> // end of ATS code.
//
using system; // for puts
//
gauss_jordan A::dmatrix = () when
  (m, n) = dim(A);
  _ = ATS_gauss_jordan_double A m n;
end ; // end of [when] // end of [gauss_jordan]
//
mat2str A =
join "\n" (map (join ", " . list.map str) (rows A));
//
let n = 10;
let A = dmatrix{ max(i)(j) | i = 0 .. n-1; j = 0 .. n-1 };
puts(str(dim(A)));
puts("A(bef)="); puts( mat2str(A) );
let _ = gauss_jordan(A);
puts("A(aft)="); puts( mat2str(A) );
//
// mytest_ats(); // this test can also be done inside ATS
//
/* end of [gauss_jordan_dats.pure] */

